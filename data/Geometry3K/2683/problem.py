import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Length(Point('P'),Point('Q')) - (sympy.simplify('6') - Variable('x'))), (Length(Point('Q'),Point('R')) - (sympy.simplify('6') + Variable('x'))), (Length(Point('Q'),Point('T')) - sympy.simplify('3')), (Length(Point('Q'),Point('S')) - (sympy.simplify('3') + Variable('x'))), Between(Point('Q'),Point('S'),Point('T')), Collinear(Point('Q'),Point('S'),Point('T')), Between(Point('Q'),Point('P'),Point('R')), Collinear(Point('P'),Point('Q'),Point('R')), Parallel(Point('P'),Point('T'),Point('R'),Point('S'))]
goal = Length(Point('P'),Point('Q'))
solution = '6'

diagrammatic_relations = [SameSide(Point('P'),Point('Q'),Point('R'),Point('S')), OppositeSide(Point('P'),Point('R'),Point('S'),Point('T')), SameSide(Point('Q'),Point('S'),Point('P'),Point('T')), OppositeSide(Point('P'),Point('R'),Point('Q'),Point('T')), NotCollinear(Point('P'),Point('S'),Point('T')), NotCollinear(Point('P'),Point('R'),Point('S')), SameSide(Point('Q'),Point('R'),Point('P'),Point('T')), NotCollinear(Point('Q'),Point('R'),Point('S')), OppositeSide(Point('S'),Point('T'),Point('P'),Point('Q')), NotCollinear(Point('R'),Point('S'),Point('T')), NotCollinear(Point('P'),Point('Q'),Point('S')), NotCollinear(Point('P'),Point('Q'),Point('T')), SameSide(Point('Q'),Point('S'),Point('R'),Point('T')), SameSide(Point('R'),Point('T'),Point('P'),Point('S')), OppositeSide(Point('S'),Point('T'),Point('Q'),Point('R')), SameSide(Point('Q'),Point('R'),Point('P'),Point('S')), OppositeSide(Point('P'),Point('R'),Point('Q'),Point('S')), SameSide(Point('P'),Point('S'),Point('R'),Point('T')), SameSide(Point('R'),Point('S'),Point('P'),Point('T')), SameSide(Point('P'),Point('Q'),Point('R'),Point('T')), NotCollinear(Point('P'),Point('R'),Point('T')), NotCollinear(Point('Q'),Point('R'),Point('T')), SameSide(Point('Q'),Point('T'),Point('R'),Point('S')), SameSide(Point('Q'),Point('T'),Point('P'),Point('S')), SameSide(Point('P'),Point('T'),Point('R'),Point('S')), OppositeSide(Point('S'),Point('T'),Point('P'),Point('R'))]