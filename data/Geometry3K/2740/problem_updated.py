import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Length(Point('R'),Point('T')) - sympy.simplify('6')), Between(Point('T'),Point('P'),Point('R')), Collinear(Point('P'),Point('R'),Point('T')), Between(Point('T'),Point('Q'),Point('S')), Collinear(Point('Q'),Point('S'),Point('T')), Perpendicular(Point('P'),Point('T'),Point('Q'),Point('T')), (Length(Point('R'),Point('S')) - Variable('radius_S')), (Length(Point('Q'),Point('S')) - Variable('radius_S')), (Length(Point('P'),Point('S')) - Variable('radius_S')), (Angle(Point('P'),Point('S'),Point('R')) - ((sympy.simplify('98') / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('P'),Point('S'),Point('R')) - ((sympy.simplify('98') / sympy.simplify('180')) * sympy.simplify('pi')))]
goal = Angle(Point('P'),Point('S'),Point('Q'))
solution = '(49)/180*pi'

diagrammatic_relations = {NotCollinear(Point('R'),Point('S'),Point('T')), NotCollinear(Point('Q'),Point('R'),Point('T')), SameSide(Point('Q'),Point('T'),Point('R'),Point('S')), OppositeSide(Point('Q'),Point('S'),Point('P'),Point('R')), OppositeSide(Point('P'),Point('R'),Point('Q'),Point('S')), SameSide(Point('P'),Point('S'),Point('Q'),Point('R')), OppositeSide(Point('Q'),Point('S'),Point('R'),Point('T')), OppositeSide(Point('P'),Point('R'),Point('Q'),Point('T')), NotCollinear(Point('P'),Point('Q'),Point('T')), SameSide(Point('P'),Point('T'),Point('R'),Point('S')), NotCollinear(Point('Q'),Point('R'),Point('S')), SameSide(Point('P'),Point('T'),Point('Q'),Point('R')), SameSide(Point('R'),Point('T'),Point('P'),Point('S')), Between(Point('T'),Point('P'),Point('R')), NotCollinear(Point('P'),Point('R'),Point('S')), NotCollinear(Point('P'),Point('S'),Point('T')), OppositeSide(Point('Q'),Point('S'),Point('P'),Point('T')), NotCollinear(Point('P'),Point('Q'),Point('R')), Between(Point('T'),Point('Q'),Point('S')), NotCollinear(Point('P'),Point('Q'),Point('S')), SameSide(Point('R'),Point('T'),Point('P'),Point('Q')), SameSide(Point('Q'),Point('T'),Point('P'),Point('S')), SameSide(Point('R'),Point('S'),Point('P'),Point('Q')), SameSide(Point('S'),Point('T'),Point('P'),Point('Q')), SameSide(Point('S'),Point('T'),Point('Q'),Point('R')), OppositeSide(Point('P'),Point('R'),Point('S'),Point('T')), SameSide(Point('Q'),Point('R'),Point('P'),Point('S')), SameSide(Point('P'),Point('Q'),Point('R'),Point('S'))}
