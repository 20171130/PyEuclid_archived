import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Angle(Point('D'),Point('F'),Point('E')) - sympy.simplify('108/180*pi')), (Angle(Point('B'),Point('C'),Point('E')) - sympy.simplify('120/180*pi')), (Angle(Point('C'),Point('B'),Point('D')) - (((sympy.simplify('5') * Variable('y')) / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('B'),Point('D'),Point('F')) - (((sympy.simplify('2') * Variable('x')) / sympy.simplify('180')) * sympy.simplify('pi'))), Between(Point('F'),Point('C'),Point('E')), Collinear(Point('C'),Point('E'),Point('F')), Parallel(Point('B'),Point('D'),Point('C'),Point('E'))]
goal = Variable('x')
solution = '54'

diagrammatic_relations = {NotCollinear(Point('B'),Point('C'),Point('D')), NotCollinear(Point('B'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('C'),Point('E')), OppositeSide(Point('B'),Point('E'),Point('D'),Point('F')), SameSide(Point('B'),Point('C'),Point('D'),Point('E')), NotCollinear(Point('C'),Point('D'),Point('E')), SameSide(Point('C'),Point('F'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('C'),Point('F')), SameSide(Point('B'),Point('D'),Point('C'),Point('F')), SameSide(Point('B'),Point('D'),Point('E'),Point('F')), SameSide(Point('B'),Point('D'),Point('C'),Point('E')), NotCollinear(Point('C'),Point('D'),Point('F')), SameSide(Point('C'),Point('F'),Point('B'),Point('D')), OppositeSide(Point('C'),Point('E'),Point('B'),Point('F')), OppositeSide(Point('C'),Point('E'),Point('D'),Point('F')), SameSide(Point('E'),Point('F'),Point('C'),Point('D')), SameSide(Point('E'),Point('F'),Point('B'),Point('D')), SameSide(Point('B'),Point('F'),Point('D'),Point('E')), OppositeSide(Point('B'),Point('E'),Point('C'),Point('D')), SameSide(Point('D'),Point('E'),Point('B'),Point('F')), SameSide(Point('E'),Point('F'),Point('B'),Point('C')), NotCollinear(Point('B'),Point('E'),Point('F')), OppositeSide(Point('D'),Point('F'),Point('B'),Point('E')), OppositeSide(Point('B'),Point('F'),Point('C'),Point('D')), SameSide(Point('C'),Point('F'),Point('B'),Point('E')), OppositeSide(Point('C'),Point('D'),Point('B'),Point('E')), NotCollinear(Point('D'),Point('E'),Point('F')), NotCollinear(Point('B'),Point('D'),Point('F')), SameSide(Point('D'),Point('F'),Point('B'),Point('C')), SameSide(Point('B'),Point('C'),Point('D'),Point('F')), OppositeSide(Point('C'),Point('D'),Point('B'),Point('F')), Between(Point('F'),Point('C'),Point('E')), SameSide(Point('C'),Point('E'),Point('B'),Point('D')), SameSide(Point('D'),Point('E'),Point('B'),Point('C'))}
