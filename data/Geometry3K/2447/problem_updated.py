import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Angle(Point('C'),Point('B'),Point('D')) - ((Variable('x') / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('A'),Point('D'),Point('B')) - sympy.simplify('120/180*pi')), (Angle(Point('B'),Point('C'),Point('E')) - ((((sympy.simplify('3') * Variable('x')) - sympy.simplify('70')) / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('A'),Point('C'),Point('B')) - ((((sympy.simplify('3') * Variable('y')) + sympy.simplify('40')) / sympy.simplify('180')) * sympy.simplify('pi'))), Between(Point('C'),Point('A'),Point('E')), Collinear(Point('A'),Point('C'),Point('E')), Parallel(Point('A'),Point('D'),Point('B'),Point('C'))]
goal = Variable('y')
solution = '10'

diagrammatic_relations = {NotCollinear(Point('A'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('C'),Point('D')), OppositeSide(Point('A'),Point('E'),Point('C'),Point('D')), OppositeSide(Point('B'),Point('C'),Point('D'),Point('E')), SameSide(Point('A'),Point('C'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('C'),Point('E')), SameSide(Point('B'),Point('D'),Point('A'),Point('C')), NotCollinear(Point('C'),Point('D'),Point('E')), SameSide(Point('C'),Point('D'),Point('B'),Point('E')), OppositeSide(Point('A'),Point('B'),Point('C'),Point('D')), OppositeSide(Point('A'),Point('E'),Point('B'),Point('C')), SameSide(Point('A'),Point('D'),Point('B'),Point('C')), SameSide(Point('A'),Point('C'),Point('B'),Point('D')), SameSide(Point('B'),Point('D'),Point('C'),Point('E')), SameSide(Point('B'),Point('E'),Point('A'),Point('D')), SameSide(Point('B'),Point('D'),Point('A'),Point('E')), OppositeSide(Point('A'),Point('B'),Point('D'),Point('E')), OppositeSide(Point('D'),Point('E'),Point('A'),Point('B')), SameSide(Point('B'),Point('E'),Point('C'),Point('D')), OppositeSide(Point('C'),Point('D'),Point('A'),Point('B')), SameSide(Point('C'),Point('E'),Point('A'),Point('B')), SameSide(Point('A'),Point('D'),Point('B'),Point('E')), OppositeSide(Point('D'),Point('E'),Point('B'),Point('C')), NotCollinear(Point('A'),Point('C'),Point('D')), SameSide(Point('B'),Point('C'),Point('A'),Point('D')), SameSide(Point('A'),Point('C'),Point('B'),Point('E')), NotCollinear(Point('A'),Point('B'),Point('D')), Between(Point('C'),Point('A'),Point('E')), NotCollinear(Point('A'),Point('B'),Point('E')), NotCollinear(Point('A'),Point('B'),Point('C')), SameSide(Point('A'),Point('E'),Point('B'),Point('D')), SameSide(Point('C'),Point('E'),Point('A'),Point('D')), SameSide(Point('C'),Point('E'),Point('B'),Point('D'))}
