import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [Between(Point('X'),Point('Q'),Point('R')), Collinear(Point('Q'),Point('R'),Point('X')), Between(Point('A'),Point('Q'),Point('Y')), Collinear(Point('A'),Point('Q'),Point('Y')), Between(Point('Z'),Point('P'),Point('Q')), Collinear(Point('P'),Point('Q'),Point('Z')), Between(Point('A'),Point('R'),Point('Z')), Collinear(Point('A'),Point('R'),Point('Z')), Between(Point('Y'),Point('P'),Point('R')), Collinear(Point('P'),Point('R'),Point('Y')), Between(Point('A'),Point('X'),Point('Y')), Collinear(Point('A'),Point('X'),Point('Y')), (Length(Point('Q'),Point('Z')) - ((sympy.simplify('3') * Variable('a')) - sympy.simplify('11'))), (Length(Point('P'),Point('Z')) - (Variable('a') + sympy.simplify('5'))), (Length(Point('P'),Point('Y')) - ((sympy.simplify('2') * Variable('c')) - sympy.simplify('1'))), (Length(Point('R'),Point('Y')) - ((sympy.simplify('4') * Variable('c')) - sympy.simplify('11'))), (Angle(Point('P'),Point('R'),Point('Z')) - ((((sympy.simplify('4') * Variable('b')) - sympy.simplify('17')) / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('Q'),Point('R'),Point('Z')) - ((((sympy.simplify('3') * Variable('b')) - sympy.simplify('4')) / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('Q'),Point('Y'),Point('R')) - ((((sympy.simplify('7') * Variable('b')) + sympy.simplify('6')) / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('P'),Point('X'),Point('R')) - ((((sympy.simplify('2') * Variable('a')) + sympy.simplify('10')) / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('P'),Point('R'),Point('Z')) - Angle(Point('Q'),Point('R'),Point('Z'))), (Length(Point('Q'),Point('Z')) - ((sympy.simplify('3') * Variable('a')) - sympy.simplify('11'))), (Length(Point('P'),Point('Z')) - (Variable('a') + sympy.simplify('5'))), (Length(Point('P'),Point('Y')) - ((sympy.simplify('2') * Variable('c')) - sympy.simplify('1'))), (Length(Point('R'),Point('Y')) - ((sympy.simplify('4') * Variable('c')) - sympy.simplify('11'))), (Angle(Point('P'),Point('R'),Point('Z')) - ((((sympy.simplify('4') * Variable('b')) - sympy.simplify('17')) / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('Q'),Point('R'),Point('Z')) - ((((sympy.simplify('3') * Variable('b')) - sympy.simplify('4')) / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('Q'),Point('Y'),Point('R')) - ((((sympy.simplify('7') * Variable('b')) + sympy.simplify('6')) / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('P'),Point('X'),Point('R')) - ((((sympy.simplify('2') * Variable('a')) + sympy.simplify('10')) / sympy.simplify('180')) * sympy.simplify('pi')))]
goal = Angle(Point('P'),Point('R'),Point('Z'))
solution = '(35)/180*pi'

diagrammatic_relations = {Between(Point('A'),Point('Y'),Point('Z')), Between(Point('Y'),Point('R'),Point('Z')), Between(Point('P'),Point('Y'),Point('Z')), Between(Point('X'),Point('A'),Point('Z')), Between(Point('Z'),Point('Q'),Point('X')), Between(Point('Z'),Point('Q'),Point('Y')), Between(Point('A'),Point('P'),Point('R')), Between(Point('P'),Point('R'),Point('Z')), Between(Point('P'),Point('Q'),Point('X')), Between(Point('Z'),Point('Q'),Point('R')), Between(Point('P'),Point('Q'),Point('R')), Between(Point('X'),Point('Y'),Point('Z')), Between(Point('X'),Point('P'),Point('R')), Between(Point('A'),Point('X'),Point('Y')), Between(Point('X'),Point('A'),Point('Q')), Between(Point('A'),Point('Q'),Point('R')), Between(Point('Y'),Point('R'),Point('X')), Between(Point('Y'),Point('P'),Point('R')), Between(Point('P'),Point('A'),Point('Z')), Between(Point('Z'),Point('A'),Point('Q')), Between(Point('A'),Point('R'),Point('X')), Between(Point('P'),Point('A'),Point('Q')), Between(Point('A'),Point('P'),Point('Y')), Between(Point('Y'),Point('Q'),Point('R')), Between(Point('A'),Point('Q'),Point('Y')), Between(Point('Z'),Point('P'),Point('Q')), Between(Point('Y'),Point('A'),Point('R')), Between(Point('X'),Point('Q'),Point('Y')), Between(Point('X'),Point('R'),Point('Z')), Between(Point('X'),Point('P'),Point('Y')), Between(Point('P'),Point('Q'),Point('Y')), Between(Point('X'),Point('Q'),Point('R')), Between(Point('P'),Point('X'),Point('Z')), Between(Point('A'),Point('R'),Point('Z')), Between(Point('X'),Point('A'),Point('P'))}
