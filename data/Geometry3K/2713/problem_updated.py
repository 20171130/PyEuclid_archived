import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Length(Point('B'),Point('C')) - ((sympy.simplify('3') * Variable('y')) - sympy.simplify('4'))), (Angle(Point('A'),Point('C'),Point('D')) - sympy.simplify('54/180*pi')), (Length(Point('A'),Point('B')) - (sympy.simplify('5') * Variable('x'))), (Angle(Point('C'),Point('A'),Point('D')) - sympy.simplify('49/180*pi')), (Length(Point('A'),Point('D')) - sympy.simplify('29')), (Length(Point('C'),Point('D')) - sympy.simplify('25')), (Angle(Point('A'),Point('D'),Point('B')) - sympy.simplify('34/180*pi')), Between(Point('F'),Point('B'),Point('D')), Collinear(Point('B'),Point('D'),Point('F')), Between(Point('F'),Point('A'),Point('C')), Collinear(Point('A'),Point('C'),Point('F')), Parallelogram(Point('A'),Point('B'),Point('C'),Point('D')), Parallelogram(Point('A'),Point('B'),Point('C'),Point('D'))]
goal = Angle(Point('C'),Point('D'),Point('F'))
solution = '(43)/180*pi'

diagrammatic_relations = {SameSide(Point('C'),Point('F'),Point('A'),Point('D')), NotCollinear(Point('B'),Point('C'),Point('D')), OppositeSide(Point('B'),Point('D'),Point('C'),Point('F')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('F')), OppositeSide(Point('B'),Point('D'),Point('A'),Point('C')), Between(Point('F'),Point('B'),Point('D')), SameSide(Point('C'),Point('D'),Point('A'),Point('B')), SameSide(Point('A'),Point('F'),Point('C'),Point('D')), OppositeSide(Point('A'),Point('C'),Point('D'),Point('F')), SameSide(Point('C'),Point('F'),Point('A'),Point('B')), NotCollinear(Point('B'),Point('C'),Point('F')), SameSide(Point('A'),Point('D'),Point('B'),Point('C')), SameSide(Point('A'),Point('B'),Point('C'),Point('D')), NotCollinear(Point('C'),Point('D'),Point('F')), SameSide(Point('B'),Point('F'),Point('C'),Point('D')), SameSide(Point('D'),Point('F'),Point('A'),Point('B')), SameSide(Point('B'),Point('F'),Point('A'),Point('D')), Between(Point('F'),Point('A'),Point('C')), OppositeSide(Point('B'),Point('D'),Point('A'),Point('F')), NotCollinear(Point('A'),Point('C'),Point('D')), SameSide(Point('B'),Point('C'),Point('A'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('F')), NotCollinear(Point('A'),Point('B'),Point('D')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('D')), SameSide(Point('A'),Point('F'),Point('B'),Point('C')), NotCollinear(Point('A'),Point('D'),Point('F')), NotCollinear(Point('A'),Point('B'),Point('C')), SameSide(Point('D'),Point('F'),Point('B'),Point('C'))}
