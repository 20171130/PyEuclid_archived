import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [Perpendicular(Point('D'),Point('B'),Point('B'),Point('C')), (Angle(Point('A'),Point('B'),Point('C')) - Variable('angle_9')), Between(Point('E'),Point('A'),Point('B')), Collinear(Point('A'),Point('B'),Point('E')), (Length(Point('B'),Point('D')) - Variable('radius_D')), (Length(Point('D'),Point('E')) - Variable('radius_D')), (Angle(Point('B'),Point('D'),Point('E')) - ((sympy.simplify('120') / sympy.simplify('180')) * sympy.simplify('pi')))]
goal = Variable('angle_9')
solution = '(120)/180*pi'

diagrammatic_relations = [SameSide(Point('C'),Point('D'),Point('B'),Point('E')), OppositeSide(Point('A'),Point('E'),Point('C'),Point('D')), SameSide(Point('C'),Point('D'),Point('A'),Point('B')), SameSide(Point('B'),Point('E'),Point('A'),Point('D')), SameSide(Point('A'),Point('D'),Point('C'),Point('E')), OppositeSide(Point('A'),Point('B'),Point('C'),Point('D')), SameSide(Point('A'),Point('D'),Point('B'),Point('C')), NotCollinear(Point('A'),Point('C'),Point('E')), OppositeSide(Point('A'),Point('C'),Point('D'),Point('E')), SameSide(Point('B'),Point('E'),Point('C'),Point('D')), SameSide(Point('A'),Point('E'),Point('B'),Point('C')), SameSide(Point('B'),Point('C'),Point('D'),Point('E')), SameSide(Point('D'),Point('E'),Point('B'),Point('C')), SameSide(Point('C'),Point('D'),Point('A'),Point('E')), OppositeSide(Point('C'),Point('E'),Point('A'),Point('D')), SameSide(Point('A'),Point('E'),Point('B'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('D')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('D')), OppositeSide(Point('C'),Point('E'),Point('B'),Point('D')), NotCollinear(Point('B'),Point('C'),Point('E')), NotCollinear(Point('C'),Point('D'),Point('E')), SameSide(Point('B'),Point('E'),Point('A'),Point('C')), OppositeSide(Point('B'),Point('C'),Point('A'),Point('D')), SameSide(Point('D'),Point('E'),Point('A'),Point('C')), NotCollinear(Point('A'),Point('C'),Point('D')), OppositeSide(Point('B'),Point('D'),Point('C'),Point('E')), NotCollinear(Point('A'),Point('B'),Point('C')), OppositeSide(Point('A'),Point('B'),Point('C'),Point('E')), NotCollinear(Point('A'),Point('D'),Point('E')), OppositeSide(Point('A'),Point('B'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('C'),Point('D')), SameSide(Point('B'),Point('D'),Point('A'),Point('C'))]

new_diagrammatic_relations = {NotCollinear(Point('A'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('C'),Point('D')), OppositeSide(Point('A'),Point('E'),Point('C'),Point('D')), SameSide(Point('D'),Point('E'),Point('A'),Point('C')), OppositeSide(Point('A'),Point('C'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('C'),Point('E')), Between(Point('E'),Point('A'),Point('B')), OppositeSide(Point('C'),Point('E'),Point('A'),Point('D')), SameSide(Point('B'),Point('C'),Point('D'),Point('E')), SameSide(Point('A'),Point('D'),Point('C'),Point('E')), NotCollinear(Point('C'),Point('D'),Point('E')), SameSide(Point('C'),Point('D'),Point('A'),Point('B')), SameSide(Point('B'),Point('D'),Point('A'),Point('C')), SameSide(Point('C'),Point('D'),Point('B'),Point('E')), OppositeSide(Point('A'),Point('B'),Point('C'),Point('D')), OppositeSide(Point('C'),Point('E'),Point('B'),Point('D')), OppositeSide(Point('B'),Point('D'),Point('C'),Point('E')), SameSide(Point('A'),Point('D'),Point('B'),Point('C')), SameSide(Point('B'),Point('E'),Point('A'),Point('D')), OppositeSide(Point('A'),Point('B'),Point('D'),Point('E')), SameSide(Point('B'),Point('E'),Point('C'),Point('D')), OppositeSide(Point('B'),Point('C'),Point('A'),Point('D')), NotCollinear(Point('A'),Point('C'),Point('E')), SameSide(Point('A'),Point('E'),Point('B'),Point('C')), SameSide(Point('C'),Point('D'),Point('A'),Point('E')), NotCollinear(Point('A'),Point('C'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('D')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('C')), SameSide(Point('A'),Point('E'),Point('B'),Point('D')), SameSide(Point('B'),Point('E'),Point('A'),Point('C')), OppositeSide(Point('A'),Point('B'),Point('C'),Point('E')), SameSide(Point('D'),Point('E'),Point('B'),Point('C'))}

