import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Length(Point('C'),Point('N')) - sympy.simplify('20')), (Length(Point('A'),Point('M')) - ((sympy.simplify('4') * Variable('x')) - sympy.simplify('6'))), (Length(Point('A'),Point('N')) - ((sympy.simplify('3') * Variable('x')) - sympy.simplify('2'))), (Length(Point('B'),Point('M')) - sympy.simplify('24')), Between(Point('N'),Point('A'),Point('C')), Collinear(Point('A'),Point('C'),Point('N')), Between(Point('M'),Point('A'),Point('B')), Collinear(Point('A'),Point('B'),Point('M')), Parallel(Point('B'),Point('C'),Point('M'),Point('N')), Parallel(Point('B'),Point('C'),Point('M'),Point('N'))]
goal = Variable('x')
solution = '9'

diagrammatic_relations = [SameSide(Point('C'),Point('N'),Point('B'),Point('M')), OppositeSide(Point('B'),Point('N'),Point('C'),Point('M')), SameSide(Point('C'),Point('N'),Point('A'),Point('M')), OppositeSide(Point('A'),Point('C'),Point('M'),Point('N')), SameSide(Point('B'),Point('C'),Point('M'),Point('N')), SameSide(Point('A'),Point('M'),Point('B'),Point('N')), NotCollinear(Point('A'),Point('C'),Point('M')), SameSide(Point('M'),Point('N'),Point('B'),Point('C')), SameSide(Point('C'),Point('N'),Point('A'),Point('B')), SameSide(Point('A'),Point('N'),Point('B'),Point('C')), SameSide(Point('A'),Point('M'),Point('B'),Point('C')), OppositeSide(Point('C'),Point('M'),Point('B'),Point('N')), SameSide(Point('B'),Point('M'),Point('A'),Point('N')), OppositeSide(Point('A'),Point('B'),Point('M'),Point('N')), NotCollinear(Point('A'),Point('M'),Point('N')), NotCollinear(Point('B'),Point('M'),Point('N')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('N')), NotCollinear(Point('B'),Point('C'),Point('M')), SameSide(Point('B'),Point('M'),Point('A'),Point('C')), NotCollinear(Point('C'),Point('M'),Point('N')), NotCollinear(Point('B'),Point('C'),Point('N')), SameSide(Point('A'),Point('N'),Point('C'),Point('M')), OppositeSide(Point('A'),Point('B'),Point('C'),Point('M')), NotCollinear(Point('A'),Point('B'),Point('N')), NotCollinear(Point('A'),Point('B'),Point('C')), SameSide(Point('B'),Point('M'),Point('C'),Point('N'))]

new_diagrammatic_relations = {SameSide(Point('C'),Point('N'),Point('B'),Point('M')), SameSide(Point('C'),Point('N'),Point('A'),Point('M')), NotCollinear(Point('B'),Point('C'),Point('N')), Between(Point('N'),Point('A'),Point('C')), SameSide(Point('A'),Point('N'),Point('C'),Point('M')), NotCollinear(Point('A'),Point('B'),Point('N')), SameSide(Point('A'),Point('N'),Point('B'),Point('C')), SameSide(Point('C'),Point('N'),Point('A'),Point('B')), SameSide(Point('B'),Point('C'),Point('M'),Point('N')), NotCollinear(Point('B'),Point('M'),Point('N')), NotCollinear(Point('B'),Point('C'),Point('M')), NotCollinear(Point('C'),Point('M'),Point('N')), NotCollinear(Point('A'),Point('C'),Point('M')), SameSide(Point('M'),Point('N'),Point('B'),Point('C')), SameSide(Point('B'),Point('M'),Point('C'),Point('N')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('N')), OppositeSide(Point('A'),Point('C'),Point('M'),Point('N')), Between(Point('M'),Point('A'),Point('B')), NotCollinear(Point('A'),Point('M'),Point('N')), OppositeSide(Point('C'),Point('M'),Point('B'),Point('N')), OppositeSide(Point('A'),Point('B'),Point('M'),Point('N')), OppositeSide(Point('B'),Point('N'),Point('C'),Point('M')), SameSide(Point('B'),Point('M'),Point('A'),Point('N')), OppositeSide(Point('A'),Point('B'),Point('C'),Point('M')), SameSide(Point('B'),Point('M'),Point('A'),Point('C')), SameSide(Point('A'),Point('M'),Point('B'),Point('C')), NotCollinear(Point('A'),Point('B'),Point('C')), SameSide(Point('A'),Point('M'),Point('B'),Point('N'))}

