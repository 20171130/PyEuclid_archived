import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Angle(Point('C'),Point('B'),Point('E')) - Variable('angle_6')), (Angle(Point('A'),Point('B'),Point('E')) - Variable('angle_7')), (Angle(Point('A'),Point('B'),Point('D')) - Variable('angle_8')), Between(Point('B'),Point('C'),Point('D')), Collinear(Point('B'),Point('C'),Point('D')), ((Variable('angle_6') + Variable('angle_6')) - sympy.simplify('pi/2')), (Variable('angle_8') - sympy.simplify('47/180*pi'))]
goal = Variable('angle_7')
solution = '(88)/180*pi'

diagrammatic_relations = [SameSide(Point('B'),Point('D'),Point('C'),Point('E')), NotCollinear(Point('A'),Point('B'),Point('E')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('E')), SameSide(Point('A'),Point('E'),Point('C'),Point('D')), SameSide(Point('B'),Point('E'),Point('A'),Point('D')), SameSide(Point('B'),Point('C'),Point('A'),Point('E')), SameSide(Point('A'),Point('D'),Point('C'),Point('E')), SameSide(Point('B'),Point('D'),Point('A'),Point('E')), SameSide(Point('C'),Point('E'),Point('A'),Point('B')), NotCollinear(Point('A'),Point('C'),Point('E')), OppositeSide(Point('C'),Point('D'),Point('A'),Point('B')), OppositeSide(Point('A'),Point('C'),Point('D'),Point('E')), SameSide(Point('A'),Point('D'),Point('B'),Point('E')), SameSide(Point('A'),Point('E'),Point('B'),Point('C')), SameSide(Point('B'),Point('C'),Point('D'),Point('E')), SameSide(Point('C'),Point('D'),Point('A'),Point('E')), SameSide(Point('A'),Point('B'),Point('C'),Point('E')), SameSide(Point('A'),Point('E'),Point('B'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('D')), NotCollinear(Point('B'),Point('C'),Point('E')), NotCollinear(Point('C'),Point('D'),Point('E')), SameSide(Point('B'),Point('C'),Point('A'),Point('D')), OppositeSide(Point('B'),Point('E'),Point('A'),Point('C')), NotCollinear(Point('A'),Point('C'),Point('D')), SameSide(Point('C'),Point('E'),Point('A'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('C')), OppositeSide(Point('D'),Point('E'),Point('A'),Point('B')), OppositeSide(Point('C'),Point('D'),Point('B'),Point('E')), NotCollinear(Point('A'),Point('D'),Point('E')), OppositeSide(Point('A'),Point('B'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('D'),Point('E')), OppositeSide(Point('D'),Point('E'),Point('A'),Point('C')), SameSide(Point('B'),Point('D'),Point('A'),Point('C'))]
