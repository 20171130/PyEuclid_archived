import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Perpendicular(Point('M'),Point('A'),Point('A'),Point('P'))),(Length(Point('B'),Point('C')) - sympy.simplify('6')), (Length(Point('A'),Point('M')) - sympy.simplify('10')), (Length(Point('B'),Point('M')) - Variable('y')), Between(Point('B'),Point('C'),Point('M')), Collinear(Point('B'),Point('C'),Point('M')), (Length(Point('C'),Point('P')) - Variable('radius_P')), (Length(Point('B'),Point('P')) - Variable('radius_P')), (Length(Point('A'),Point('P')) - Variable('radius_P'))]
goal = Variable('y')
solution = '7.4'

diagrammatic_relations = [SameSide(Point('A'),Point('M'),Point('B'),Point('P')), NotCollinear(Point('C'),Point('M'),Point('P')), NotCollinear(Point('A'),Point('B'),Point('M')), SameSide(Point('B'),Point('C'),Point('A'),Point('P')), SameSide(Point('A'),Point('B'),Point('C'),Point('P')), NotCollinear(Point('A'),Point('C'),Point('M')), SameSide(Point('A'),Point('P'),Point('C'),Point('M')), OppositeSide(Point('C'),Point('M'),Point('B'),Point('P')), NotCollinear(Point('A'),Point('B'),Point('P')), OppositeSide(Point('B'),Point('P'),Point('A'),Point('C')), NotCollinear(Point('A'),Point('M'),Point('P')), OppositeSide(Point('A'),Point('C'),Point('M'),Point('P')), SameSide(Point('C'),Point('P'),Point('A'),Point('M')), OppositeSide(Point('M'),Point('P'),Point('A'),Point('B')), SameSide(Point('A'),Point('P'),Point('B'),Point('C')), SameSide(Point('C'),Point('M'),Point('A'),Point('P')), SameSide(Point('B'),Point('M'),Point('A'),Point('C')), SameSide(Point('B'),Point('C'),Point('M'),Point('P')), SameSide(Point('C'),Point('P'),Point('A'),Point('B')), NotCollinear(Point('B'),Point('C'),Point('P')), SameSide(Point('B'),Point('M'),Point('A'),Point('P')), OppositeSide(Point('A'),Point('B'),Point('M'),Point('P')), SameSide(Point('A'),Point('P'),Point('B'),Point('M')), SameSide(Point('B'),Point('C'),Point('A'),Point('M')), SameSide(Point('B'),Point('M'),Point('C'),Point('P')), OppositeSide(Point('M'),Point('P'),Point('A'),Point('C')), NotCollinear(Point('A'),Point('B'),Point('C')), NotCollinear(Point('B'),Point('M'),Point('P')), SameSide(Point('B'),Point('P'),Point('A'),Point('M')), OppositeSide(Point('C'),Point('M'),Point('A'),Point('B')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('P')), NotCollinear(Point('A'),Point('C'),Point('P')), SameSide(Point('A'),Point('M'),Point('C'),Point('P'))]

new_diagrammatic_relations = {OppositeSide(Point('A'),Point('C'),Point('B'),Point('P')), OppositeSide(Point('A'),Point('B'),Point('M'),Point('P')), Between(Point('B'),Point('C'),Point('M')), SameSide(Point('B'),Point('M'),Point('C'),Point('P')), NotCollinear(Point('B'),Point('C'),Point('P')), SameSide(Point('C'),Point('M'),Point('A'),Point('P')), SameSide(Point('A'),Point('M'),Point('C'),Point('P')), SameSide(Point('B'),Point('M'),Point('A'),Point('P')), SameSide(Point('A'),Point('P'),Point('B'),Point('M')), SameSide(Point('A'),Point('P'),Point('B'),Point('C')), NotCollinear(Point('B'),Point('M'),Point('P')), OppositeSide(Point('B'),Point('P'),Point('A'),Point('C')), OppositeSide(Point('M'),Point('P'),Point('A'),Point('C')), SameSide(Point('C'),Point('P'),Point('A'),Point('M')), OppositeSide(Point('C'),Point('M'),Point('B'),Point('P')), NotCollinear(Point('A'),Point('C'),Point('M')), SameSide(Point('B'),Point('P'),Point('A'),Point('M')), NotCollinear(Point('A'),Point('B'),Point('M')), SameSide(Point('A'),Point('P'),Point('C'),Point('M')), SameSide(Point('B'),Point('C'),Point('M'),Point('P')), NotCollinear(Point('C'),Point('M'),Point('P')), SameSide(Point('A'),Point('B'),Point('C'),Point('P')), NotCollinear(Point('A'),Point('C'),Point('P')), NotCollinear(Point('A'),Point('M'),Point('P')), NotCollinear(Point('A'),Point('B'),Point('P')), SameSide(Point('A'),Point('M'),Point('B'),Point('P')), SameSide(Point('B'),Point('M'),Point('A'),Point('C')), OppositeSide(Point('A'),Point('C'),Point('M'),Point('P')), OppositeSide(Point('C'),Point('M'),Point('A'),Point('B')), OppositeSide(Point('M'),Point('P'),Point('A'),Point('B')), NotCollinear(Point('A'),Point('B'),Point('C')), SameSide(Point('C'),Point('P'),Point('A'),Point('B')), SameSide(Point('B'),Point('C'),Point('A'),Point('P')), SameSide(Point('B'),Point('C'),Point('A'),Point('M'))}

