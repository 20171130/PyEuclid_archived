import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [Between(Point('E'),Point('B'),Point('C')), Collinear(Point('B'),Point('C'),Point('E')), Between(Point('D'),Point('A'),Point('C')), Collinear(Point('A'),Point('C'),Point('D')), Parallel(Point('A'),Point('B'),Point('D'),Point('E')), (Length(Point('C'),Point('E')) - (Variable('t') - sympy.simplify('2'))), (Length(Point('B'),Point('E')) - (Variable('t') + sympy.simplify('1'))), (Length(Point('C'),Point('D')) - sympy.simplify('2')), (Length(Point('A'),Point('C')) - sympy.simplify('10')), (Length(Point('C'),Point('E')) - (Variable('t') - sympy.simplify('2'))), (Length(Point('B'),Point('E')) - (Variable('t') + sympy.simplify('1'))), (Length(Point('C'),Point('D')) - sympy.simplify('2')), (Length(Point('A'),Point('C')) - sympy.simplify('10'))]
goal = Length(Point('C'),Point('E'))
solution = '1'

diagrammatic_relations = [NotCollinear(Point('A'),Point('B'),Point('E')), SameSide(Point('A'),Point('B'),Point('D'),Point('E')), SameSide(Point('C'),Point('D'),Point('A'),Point('B')), OppositeSide(Point('A'),Point('E'),Point('B'),Point('D')), SameSide(Point('B'),Point('E'),Point('A'),Point('D')), OppositeSide(Point('B'),Point('D'),Point('A'),Point('E')), SameSide(Point('A'),Point('D'),Point('C'),Point('E')), SameSide(Point('D'),Point('E'),Point('A'),Point('B')), SameSide(Point('A'),Point('D'),Point('B'),Point('C')), SameSide(Point('C'),Point('E'),Point('A'),Point('B')), NotCollinear(Point('A'),Point('C'),Point('E')), OppositeSide(Point('A'),Point('C'),Point('D'),Point('E')), OppositeSide(Point('B'),Point('C'),Point('A'),Point('E')), SameSide(Point('A'),Point('D'),Point('B'),Point('E')), SameSide(Point('B'),Point('E'),Point('C'),Point('D')), SameSide(Point('C'),Point('D'),Point('A'),Point('E')), SameSide(Point('C'),Point('E'),Point('B'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('D')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('D')), NotCollinear(Point('C'),Point('D'),Point('E')), SameSide(Point('B'),Point('E'),Point('A'),Point('C')), NotCollinear(Point('A'),Point('B'),Point('C')), NotCollinear(Point('A'),Point('D'),Point('E')), OppositeSide(Point('B'),Point('C'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('C'),Point('D'))]

new_diagrammatic_relations = {NotCollinear(Point('A'),Point('D'),Point('E')), NotCollinear(Point('B'),Point('C'),Point('D')), OppositeSide(Point('B'),Point('C'),Point('D'),Point('E')), OppositeSide(Point('A'),Point('C'),Point('D'),Point('E')), Between(Point('E'),Point('B'),Point('C')), NotCollinear(Point('B'),Point('D'),Point('E')), OppositeSide(Point('A'),Point('E'),Point('B'),Point('D')), SameSide(Point('A'),Point('D'),Point('C'),Point('E')), NotCollinear(Point('C'),Point('D'),Point('E')), SameSide(Point('C'),Point('D'),Point('A'),Point('B')), SameSide(Point('A'),Point('D'),Point('B'),Point('C')), SameSide(Point('B'),Point('E'),Point('A'),Point('D')), Between(Point('D'),Point('A'),Point('C')), SameSide(Point('B'),Point('E'),Point('C'),Point('D')), SameSide(Point('D'),Point('E'),Point('A'),Point('B')), SameSide(Point('C'),Point('E'),Point('A'),Point('B')), SameSide(Point('A'),Point('D'),Point('B'),Point('E')), NotCollinear(Point('A'),Point('C'),Point('E')), OppositeSide(Point('B'),Point('C'),Point('A'),Point('E')), SameSide(Point('C'),Point('D'),Point('A'),Point('E')), NotCollinear(Point('A'),Point('B'),Point('D')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('E')), OppositeSide(Point('B'),Point('D'),Point('A'),Point('E')), NotCollinear(Point('A'),Point('B'),Point('C')), SameSide(Point('B'),Point('E'),Point('A'),Point('C')), SameSide(Point('C'),Point('E'),Point('B'),Point('D')), SameSide(Point('A'),Point('B'),Point('D'),Point('E'))}

