import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Angle(Point('B'),Point('F'),Point('C')) - sympy.simplify('72/180*pi')), (Angle(Point('A'),Point('F'),Point('D')) - ((((sympy.simplify('2') * Variable('a')) - sympy.simplify('5')) / sympy.simplify('180')) * sympy.simplify('pi'))), (Angle(Point('C'),Point('F'),Point('D')) - ((((sympy.simplify('4') * Variable('a')) - sympy.simplify('1')) / sympy.simplify('180')) * sympy.simplify('pi'))), Between(Point('F'),Point('A'),Point('C')), Between(Point('F'),Point('A'),Point('C')), ((Length(Point('A'),Point('C')) - Variable('radius_F')) - Variable('radius_F')), Collinear(Point('A'),Point('C'),Point('F')), ((Length(Point('A'),Point('C')) - Variable('radius_F')) - Variable('radius_F')), Collinear(Point('A'),Point('C'),Point('F')), (Length(Point('D'),Point('F')) - Variable('radius_F')), (Length(Point('C'),Point('F')) - Variable('radius_F')), (Length(Point('A'),Point('F')) - Variable('radius_F')), (Length(Point('B'),Point('F')) - Variable('radius_F'))]
goal = Angle(Point('C'),Point('F'),Point('D'))
solution = '(123)/180*pi'

diagrammatic_relations = {SameSide(Point('A'),Point('B'),Point('D'),Point('F')), SameSide(Point('C'),Point('F'),Point('A'),Point('D')), NotCollinear(Point('B'),Point('C'),Point('D')), OppositeSide(Point('B'),Point('D'),Point('C'),Point('F')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('F')), OppositeSide(Point('B'),Point('D'),Point('A'),Point('C')), SameSide(Point('C'),Point('D'),Point('A'),Point('B')), SameSide(Point('A'),Point('F'),Point('C'),Point('D')), OppositeSide(Point('A'),Point('C'),Point('D'),Point('F')), SameSide(Point('A'),Point('D'),Point('B'),Point('F')), SameSide(Point('C'),Point('F'),Point('A'),Point('B')), NotCollinear(Point('B'),Point('C'),Point('F')), SameSide(Point('A'),Point('D'),Point('B'),Point('C')), SameSide(Point('A'),Point('B'),Point('C'),Point('D')), NotCollinear(Point('C'),Point('D'),Point('F')), SameSide(Point('B'),Point('F'),Point('C'),Point('D')), SameSide(Point('D'),Point('F'),Point('A'),Point('B')), SameSide(Point('B'),Point('F'),Point('A'),Point('D')), Between(Point('F'),Point('A'),Point('C')), SameSide(Point('C'),Point('F'),Point('B'),Point('D')), OppositeSide(Point('B'),Point('D'),Point('A'),Point('F')), NotCollinear(Point('A'),Point('C'),Point('D')), SameSide(Point('B'),Point('C'),Point('A'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('F')), OppositeSide(Point('A'),Point('F'),Point('B'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('D')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('D')), NotCollinear(Point('A'),Point('D'),Point('F')), SameSide(Point('A'),Point('F'),Point('B'),Point('C')), OppositeSide(Point('B'),Point('C'),Point('D'),Point('F')), NotCollinear(Point('A'),Point('B'),Point('C')), NotCollinear(Point('B'),Point('D'),Point('F')), SameSide(Point('D'),Point('F'),Point('B'),Point('C')), OppositeSide(Point('C'),Point('D'),Point('B'),Point('F'))}
