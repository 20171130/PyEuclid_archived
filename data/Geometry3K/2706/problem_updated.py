import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Length(Point('I'),Point('J')) - (((sympy.simplify('4') / sympy.simplify('2')) * Variable('y')) + sympy.simplify('1'))), (Length(Point('A'),Point('H')) - (sympy.simplify('6') - Variable('x'))), (Length(Point('E'),Point('N')) - (sympy.simplify('2') * Variable('y'))), (Length(Point('B'),Point('H')) - ((sympy.simplify('2') * Variable('x')) + sympy.simplify('3'))), Between(Point('H'),Point('A'),Point('B')), Collinear(Point('A'),Point('B'),Point('H')), Between(Point('B'),Point('A'),Point('G')), Collinear(Point('A'),Point('B'),Point('G')), Between(Point('H'),Point('A'),Point('G')), Collinear(Point('A'),Point('G'),Point('H')), Between(Point('E'),Point('A'),Point('N')), Collinear(Point('A'),Point('E'),Point('N')), Between(Point('A'),Point('B'),Point('K')), Collinear(Point('A'),Point('B'),Point('K')), Between(Point('H'),Point('B'),Point('K')), Collinear(Point('B'),Point('H'),Point('K')), Between(Point('I'),Point('B'),Point('L')), Collinear(Point('B'),Point('I'),Point('L')), Between(Point('I'),Point('D'),Point('E')), Collinear(Point('D'),Point('E'),Point('I')), Between(Point('J'),Point('D'),Point('E')), Collinear(Point('D'),Point('E'),Point('J')), Between(Point('J'),Point('E'),Point('I')), Collinear(Point('E'),Point('I'),Point('J')), Between(Point('A'),Point('E'),Point('M')), Collinear(Point('A'),Point('E'),Point('M')), Between(Point('B'),Point('G'),Point('H')), Collinear(Point('B'),Point('G'),Point('H')), Between(Point('A'),Point('G'),Point('K')), Collinear(Point('A'),Point('G'),Point('K')), Between(Point('B'),Point('G'),Point('K')), Collinear(Point('B'),Point('G'),Point('K')), Between(Point('H'),Point('G'),Point('K')), Collinear(Point('G'),Point('H'),Point('K')), Between(Point('J'),Point('C'),Point('H')), Collinear(Point('C'),Point('H'),Point('J')), Between(Point('A'),Point('H'),Point('K')), Collinear(Point('A'),Point('H'),Point('K')), Between(Point('A'),Point('M'),Point('N')), Collinear(Point('A'),Point('M'),Point('N')), Between(Point('E'),Point('M'),Point('N')), Collinear(Point('E'),Point('M'),Point('N')), Between(Point('B'),Point('I'),Point('O')), Collinear(Point('B'),Point('I'),Point('O')), Between(Point('E'),Point('I'),Point('P')), Collinear(Point('E'),Point('I'),Point('P')), Between(Point('J'),Point('I'),Point('P')), Collinear(Point('I'),Point('J'),Point('P')), Between(Point('B'),Point('L'),Point('O')), Collinear(Point('B'),Point('L'),Point('O')), Between(Point('I'),Point('L'),Point('O')), Collinear(Point('I'),Point('L'),Point('O')), Between(Point('H'),Point('C'),Point('F')), Collinear(Point('C'),Point('F'),Point('H')), Between(Point('J'),Point('C'),Point('F')), Collinear(Point('C'),Point('F'),Point('J')), Between(Point('H'),Point('F'),Point('J')), Collinear(Point('F'),Point('H'),Point('J')), Between(Point('I'),Point('D'),Point('J')), Collinear(Point('D'),Point('I'),Point('J')), Between(Point('E'),Point('J'),Point('P')), Collinear(Point('E'),Point('J'),Point('P')), Between(Point('E'),Point('D'),Point('P')), Collinear(Point('D'),Point('E'),Point('P')), Between(Point('I'),Point('D'),Point('P')), Collinear(Point('D'),Point('I'),Point('P')), Between(Point('J'),Point('D'),Point('P')), Collinear(Point('D'),Point('J'),Point('P')), Parallel(Point('A'),Point('E'),Point('B'),Point('I')), (Length(Point('A'),Point('H')) - Length(Point('B'),Point('H'))), Parallel(Point('C'),Point('F'),Point('L'),Point('O')), Parallel(Point('C'),Point('F'),Point('M'),Point('N')), Parallel(Point('L'),Point('O'),Point('M'),Point('N'))]
goal = Variable('x')
solution = '1'

diagrammatic_relations = set()
