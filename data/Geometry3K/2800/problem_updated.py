import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Length(Point('L'),Point('N')) - sympy.simplify('36')), (Length(Point('A'),Point('L')) - sympy.simplify('27')), (Length(Point('A'),Point('B')) - sympy.simplify('40')), Between(Point('A'),Point('B'),Point('L')), Collinear(Point('A'),Point('B'),Point('L')), Perpendicular(Point('A'),Point('L'),Point('L'),Point('N')), Parallelogram(Point('A'),Point('B'),Point('C'),Point('N'))]
goal = Area(Point('A'),Point('B'),Point('C'),Point('N'))
solution = '1440'

diagrammatic_relations = {SameSide(Point('A'),Point('C'),Point('L'),Point('N')), OppositeSide(Point('C'),Point('L'),Point('A'),Point('N')), NotCollinear(Point('B'),Point('C'),Point('N')), SameSide(Point('L'),Point('N'),Point('B'),Point('C')), Between(Point('A'),Point('B'),Point('L')), NotCollinear(Point('B'),Point('L'),Point('N')), NotCollinear(Point('C'),Point('L'),Point('N')), OppositeSide(Point('B'),Point('L'),Point('A'),Point('C')), NotCollinear(Point('A'),Point('B'),Point('N')), SameSide(Point('A'),Point('N'),Point('B'),Point('C')), SameSide(Point('B'),Point('L'),Point('C'),Point('N')), SameSide(Point('C'),Point('N'),Point('A'),Point('B')), OppositeSide(Point('A'),Point('N'),Point('C'),Point('L')), OppositeSide(Point('B'),Point('N'),Point('C'),Point('L')), SameSide(Point('C'),Point('N'),Point('A'),Point('L')), SameSide(Point('C'),Point('N'),Point('B'),Point('L')), SameSide(Point('A'),Point('L'),Point('C'),Point('N')), SameSide(Point('B'),Point('C'),Point('A'),Point('N')), SameSide(Point('B'),Point('C'),Point('L'),Point('N')), SameSide(Point('A'),Point('L'),Point('B'),Point('C')), OppositeSide(Point('B'),Point('N'),Point('A'),Point('C')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('N')), NotCollinear(Point('A'),Point('C'),Point('L')), NotCollinear(Point('A'),Point('L'),Point('N')), SameSide(Point('A'),Point('B'),Point('L'),Point('N')), SameSide(Point('A'),Point('B'),Point('C'),Point('N')), OppositeSide(Point('B'),Point('L'),Point('A'),Point('N')), SameSide(Point('L'),Point('N'),Point('A'),Point('C')), NotCollinear(Point('A'),Point('C'),Point('N')), SameSide(Point('A'),Point('B'),Point('C'),Point('L')), SameSide(Point('A'),Point('L'),Point('B'),Point('N')), NotCollinear(Point('A'),Point('B'),Point('C')), NotCollinear(Point('B'),Point('C'),Point('L')), OppositeSide(Point('C'),Point('L'),Point('B'),Point('N'))}
