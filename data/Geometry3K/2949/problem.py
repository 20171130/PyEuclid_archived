import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Length(Point('A'),Point('C')) - sympy.simplify('11')), (Length(Point('B'),Point('D')) - sympy.simplify('8')), (Length(Point('B'),Point('H')) - sympy.simplify('10')), Between(Point('H'),Point('A'),Point('C')), Collinear(Point('A'),Point('C'),Point('H')), Perpendicular(Point('A'),Point('C'),Point('B'),Point('H')), Trapezoid(Point('A'),Point('C'),Point('B'),Point('D'))]
goal = Area(Point('A'),Point('C'),Point('B'),Point('D'))
solution = '95'

diagrammatic_relations = [SameSide(Point('B'),Point('D'),Point('A'),Point('H')), SameSide(Point('A'),Point('H'),Point('B'),Point('D')), SameSide(Point('A'),Point('D'),Point('B'),Point('H')), NotCollinear(Point('B'),Point('D'),Point('H')), SameSide(Point('A'),Point('C'),Point('B'),Point('D')), OppositeSide(Point('C'),Point('D'),Point('B'),Point('H')), OppositeSide(Point('B'),Point('H'),Point('C'),Point('D')), OppositeSide(Point('A'),Point('B'),Point('C'),Point('D')), NotCollinear(Point('B'),Point('C'),Point('H')), Between(Point('H'),Point('A'),Point('C')), SameSide(Point('A'),Point('D'),Point('B'),Point('C')), OppositeSide(Point('C'),Point('D'),Point('A'),Point('B')), OppositeSide(Point('A'),Point('C'),Point('D'),Point('H')), SameSide(Point('B'),Point('D'),Point('A'),Point('C')), SameSide(Point('C'),Point('H'),Point('A'),Point('D')), NotCollinear(Point('C'),Point('D'),Point('H')), NotCollinear(Point('A'),Point('D'),Point('H')), NotCollinear(Point('A'),Point('B'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('H')), OppositeSide(Point('A'),Point('B'),Point('D'),Point('H')), OppositeSide(Point('D'),Point('H'),Point('A'),Point('B')), SameSide(Point('B'),Point('C'),Point('A'),Point('D')), SameSide(Point('C'),Point('H'),Point('B'),Point('D')), SameSide(Point('A'),Point('H'),Point('B'),Point('C')), SameSide(Point('B'),Point('C'),Point('D'),Point('H')), SameSide(Point('D'),Point('H'),Point('B'),Point('C')), OppositeSide(Point('A'),Point('C'),Point('B'),Point('H')), SameSide(Point('B'),Point('H'),Point('A'),Point('D')), NotCollinear(Point('A'),Point('C'),Point('D')), NotCollinear(Point('A'),Point('B'),Point('C')), SameSide(Point('B'),Point('D'),Point('C'),Point('H')), SameSide(Point('C'),Point('H'),Point('A'),Point('B')), NotCollinear(Point('B'),Point('C'),Point('D')), SameSide(Point('A'),Point('H'),Point('C'),Point('D'))]
