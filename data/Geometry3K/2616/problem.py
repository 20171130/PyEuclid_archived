import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


conditions = [(Length(Point('J'),Point('K')) - sympy.simplify('6')), (Length(Point('H'),Point('J')) - sympy.simplify('4')), (Length(Point('G'),Point('H')) - Variable('x')), Between(Point('H'),Point('G'),Point('J')), Collinear(Point('G'),Point('H'),Point('J')), (Length(Point('A'),Point('H')) - Variable('radius_A')), (Length(Point('A'),Point('G')) - Variable('radius_A')), (Length(Point('A'),Point('K')) - Variable('radius_A')), (Angle(Point('A'),Point('K'),Point('J')) - sympy.simplify('pi/2'))]
goal = Variable('x')
solution = '5'

diagrammatic_relations = [SameSide(Point('J'),Point('K'),Point('A'),Point('G')), OppositeSide(Point('G'),Point('J'),Point('H'),Point('K')), NotCollinear(Point('G'),Point('J'),Point('K')), OppositeSide(Point('H'),Point('K'),Point('A'),Point('J')), OppositeSide(Point('G'),Point('K'),Point('A'),Point('H')), SameSide(Point('J'),Point('K'),Point('A'),Point('H')), NotCollinear(Point('G'),Point('H'),Point('K')), SameSide(Point('A'),Point('G'),Point('J'),Point('K')), SameSide(Point('H'),Point('J'),Point('G'),Point('K')), OppositeSide(Point('A'),Point('J'),Point('G'),Point('K')), SameSide(Point('G'),Point('H'),Point('A'),Point('J')), NotCollinear(Point('A'),Point('J'),Point('K')), SameSide(Point('G'),Point('H'),Point('A'),Point('K')), OppositeSide(Point('A'),Point('H'),Point('G'),Point('K')), SameSide(Point('H'),Point('K'),Point('A'),Point('G')), NotCollinear(Point('A'),Point('G'),Point('J')), SameSide(Point('A'),Point('K'),Point('G'),Point('H')), NotCollinear(Point('A'),Point('G'),Point('K')), NotCollinear(Point('A'),Point('H'),Point('J')), SameSide(Point('A'),Point('H'),Point('J'),Point('K')), NotCollinear(Point('A'),Point('H'),Point('K')), SameSide(Point('A'),Point('K'),Point('H'),Point('J')), OppositeSide(Point('A'),Point('J'),Point('H'),Point('K')), SameSide(Point('A'),Point('K'),Point('G'),Point('J')), SameSide(Point('G'),Point('J'),Point('A'),Point('K')), SameSide(Point('A'),Point('G'),Point('H'),Point('K')), OppositeSide(Point('G'),Point('K'),Point('A'),Point('J')), OppositeSide(Point('G'),Point('J'),Point('A'),Point('H')), NotCollinear(Point('H'),Point('J'),Point('K')), SameSide(Point('G'),Point('H'),Point('J'),Point('K')), NotCollinear(Point('A'),Point('G'),Point('H')), SameSide(Point('H'),Point('J'),Point('A'),Point('G')), SameSide(Point('H'),Point('J'),Point('A'),Point('K'))]

new_diagrammatic_relations = {NotCollinear(Point('G'),Point('H'),Point('K')), NotCollinear(Point('A'),Point('G'),Point('H')), OppositeSide(Point('A'),Point('H'),Point('G'),Point('K')), SameSide(Point('A'),Point('K'),Point('G'),Point('J')), NotCollinear(Point('A'),Point('H'),Point('J')), NotCollinear(Point('A'),Point('G'),Point('J')), OppositeSide(Point('G'),Point('J'),Point('H'),Point('K')), SameSide(Point('H'),Point('K'),Point('A'),Point('G')), Between(Point('H'),Point('G'),Point('J')), SameSide(Point('A'),Point('G'),Point('J'),Point('K')), SameSide(Point('A'),Point('H'),Point('J'),Point('K')), SameSide(Point('A'),Point('G'),Point('H'),Point('K')), OppositeSide(Point('A'),Point('J'),Point('H'),Point('K')), OppositeSide(Point('G'),Point('K'),Point('A'),Point('H')), SameSide(Point('H'),Point('J'),Point('A'),Point('G')), SameSide(Point('G'),Point('J'),Point('A'),Point('K')), OppositeSide(Point('G'),Point('K'),Point('A'),Point('J')), SameSide(Point('H'),Point('J'),Point('G'),Point('K')), SameSide(Point('G'),Point('H'),Point('A'),Point('J')), OppositeSide(Point('G'),Point('J'),Point('A'),Point('H')), OppositeSide(Point('A'),Point('J'),Point('G'),Point('K')), SameSide(Point('H'),Point('J'),Point('A'),Point('K')), SameSide(Point('J'),Point('K'),Point('A'),Point('G')), SameSide(Point('G'),Point('H'),Point('A'),Point('K')), SameSide(Point('A'),Point('K'),Point('G'),Point('H')), NotCollinear(Point('A'),Point('J'),Point('K')), NotCollinear(Point('A'),Point('G'),Point('K')), SameSide(Point('J'),Point('K'),Point('A'),Point('H')), SameSide(Point('A'),Point('K'),Point('H'),Point('J')), NotCollinear(Point('A'),Point('H'),Point('K')), NotCollinear(Point('H'),Point('J'),Point('K')), NotCollinear(Point('G'),Point('J'),Point('K')), OppositeSide(Point('H'),Point('K'),Point('A'),Point('J')), SameSide(Point('G'),Point('H'),Point('J'),Point('K'))}

