import sympy
from pyeuclid.formalization.relation import *

pi = sympy.pi


relations = [(Length(Point('C'),Point('F')) - sympy.simplify('8')), (Length(Point('A'),Point('C')) - sympy.simplify('6')), Rectangle(Point('A'),Point('C'),Point('F'),Point('G')), Between(Point('E'),Point('A'),Point('F')), Collinear(Point('A'),Point('E'),Point('F')), Between(Point('E'),Point('C'),Point('G')), Collinear(Point('C'),Point('E'),Point('G')), (Length(Point('A'),Point('E')) - Variable('radius_E')), (Length(Point('C'),Point('E')) - Variable('radius_E')), (Length(Point('E'),Point('F')) - Variable('radius_E')), (Length(Point('E'),Point('G')) - Variable('radius_E')), (Length(Point('A'),Point('E')) - Variable('radius_E')), (Length(Point('E'),Point('G')) - Variable('radius_E')), (Length(Point('E'),Point('F')) - Variable('radius_E')), (Length(Point('C'),Point('E')) - Variable('radius_E'))]
goal = (sympy.simplify(2 * pi) * Variable('radius_E'))
solution = '10*pi'

diagrammatic_relations = {NotCollinear(Point('A'),Point('E'),Point('G')), NotCollinear(Point('A'),Point('C'),Point('F')), SameSide(Point('A'),Point('E'),Point('C'),Point('F')), SameSide(Point('C'),Point('E'),Point('A'),Point('G')), OppositeSide(Point('C'),Point('G'),Point('A'),Point('E')), NotCollinear(Point('A'),Point('C'),Point('E')), NotCollinear(Point('A'),Point('F'),Point('G')), SameSide(Point('E'),Point('F'),Point('A'),Point('C')), SameSide(Point('E'),Point('F'),Point('A'),Point('G')), SameSide(Point('C'),Point('F'),Point('A'),Point('G')), SameSide(Point('C'),Point('E'),Point('F'),Point('G')), OppositeSide(Point('A'),Point('F'),Point('E'),Point('G')), SameSide(Point('A'),Point('C'),Point('F'),Point('G')), SameSide(Point('E'),Point('G'),Point('C'),Point('F')), NotCollinear(Point('C'),Point('E'),Point('F')), SameSide(Point('A'),Point('E'),Point('F'),Point('G')), NotCollinear(Point('A'),Point('C'),Point('G')), OppositeSide(Point('C'),Point('G'),Point('A'),Point('F')), NotCollinear(Point('C'),Point('F'),Point('G')), SameSide(Point('E'),Point('G'),Point('A'),Point('C')), NotCollinear(Point('E'),Point('F'),Point('G')), OppositeSide(Point('C'),Point('G'),Point('E'),Point('F')), SameSide(Point('F'),Point('G'),Point('A'),Point('C')), OppositeSide(Point('A'),Point('F'),Point('C'),Point('G')), SameSide(Point('A'),Point('G'),Point('C'),Point('F')), OppositeSide(Point('A'),Point('F'),Point('C'),Point('E'))}
